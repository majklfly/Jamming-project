{"version":3,"sources":["store/createDataContext.js","store/fetchDataContext.js","store/playerContext.js","Components/SearchBar/SearchBar.js","store/globalContext.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/Player/Player.js","Components/PlayerDataContainer/PlayerDataContainer.js","Components/Album/Album.js","Components/UserPlaylists/UserPlaylists.js","Screens/HomeScreen/index.js","App.js","serviceWorker.js","index.js"],"names":["reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","fetchUserData","accessToken","a","headers","Authorization","axios","get","response","data","addTracksToPlaylist","userId","playlistId","trackURIs","token","post","JSON","stringify","uris","getCurrentPlayback","then","res","type","payload","createDataContext","action","userdata","tracks","error","playerdata","albums","getToken","hasAccessToken","window","location","href","match","hasExpiresIn","expiresIn","Number","setTimeout","history","pushState","scopes","encodeURIComponent","accessUrl","spotifySearch","term","length","status","items","console","log","spotifySavePlaylist","playlistName","name","id","cleanErrorMessage","getAlbums","playSpecificSong","trackURI","put","loading","playSong","e","pauseSong","nextSong","previousSong","SearchBar","useState","setTerm","useContext","DataContext","search","className","placeholder","onChange","event","target","onKeyPress","onClick","track","filter","playlist","list","resetAnimation","addTrack","setPlaylist","removeTrack","Track","props","src","album","images","url","alt","artists","isRemoval","DeleteOutlined","PlayCircleOutlined","uri","PlusCircleOutlined","TrackList","undefined","map","SearchResults","Playlist","nameChange","setNameChange","globalState","GlobalContext","FetchDataContext","userState","Player","controls","useAnimation","userDataContext","dataState","globalContext","playerContext","is_playing","isPlaying","setIsPlaying","full","item","duration_ms","rest","progress_ms","current","restInSec","width","outerWidth","set","x","transition","duration","start","initialTime","direction","checkpoints","time","callback","pause","reset","Fragment","RightOutlined","forwardSong","div","style","opacity","PauseOutlined","animate","CaretRightOutlined","currentState","stop","togglePlayButton","LeftOutlined","backwardSong","initial","percent","strokeColor","showInfo","PlayerDataContainer","newSong","setNewSong","useEffect","Album","showAlbumDetails","setShowAlbumDetails","cursor","UserPlayLists","fetchDataContext","HomeScreen","showUserPlaylist","setShowUserPlaylist","getPlayerData","icon","faHome","faCompactDisc","display_name","product","followers","total","external_urls","spotify","exit","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c031f3e7.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport default (reducer, actions, initialState) => {\r\n  const Context = React.createContext();\r\n\r\n  const Provider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const boundActions = {};\r\n    for (let key in actions) {\r\n      boundActions[key] = actions[key](dispatch);\r\n    }\r\n\r\n    return (\r\n      <Context.Provider value={{ state, ...boundActions }}>\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  };\r\n\r\n  return { Context, Provider };\r\n};\r\n","import createDataContext from \"./createDataContext\";\r\nimport axios from \"axios\";\r\n\r\nconst clientId = \"91676161ae734812a2d87002a4246b27\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const fetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"get_userdata\":\r\n      return { ...state, userdata: action.payload };\r\n    case \"get_token\":\r\n      return { ...state, token: action.payload };\r\n    case \"get_tracks\":\r\n      return { ...state, tracks: action.payload };\r\n    case \"error_message\":\r\n      return { ...state, error: action.payload };\r\n    case \"get_playerdata\":\r\n      return { ...state, playerdata: action.payload };\r\n    case \"get_albums\":\r\n      return { ...state, albums: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst cleanErrorMessage = (dispatch) => {\r\n  return () => {\r\n    dispatch({ type: \"error_message\", payload: null });\r\n  };\r\n};\r\n\r\nconst fetchUserData = async (accessToken) => {\r\n  const headers = {\r\n    Authorization: `Bearer ${accessToken}`,\r\n  };\r\n  if (typeof accessToken === \"string\") {\r\n    const response = await axios.get(\"https://api.spotify.com/v1/me\", {\r\n      headers,\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\nconst getToken = (dispatch) => {\r\n  return async () => {\r\n    const hasAccessToken = window.location.href.match(/access_token=([^&]*)/);\r\n    const hasExpiresIn = window.location.href.match(/expires_in=([^&]*)/);\r\n    if (hasAccessToken && hasExpiresIn) {\r\n      let accessToken = hasAccessToken[1];\r\n      const expiresIn = Number(hasExpiresIn[1]);\r\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\r\n      window.history.pushState(\"Access Token\", null, \"/\");\r\n      const response = await fetchUserData(accessToken);\r\n      dispatch({ type: \"get_token\", payload: accessToken });\r\n      dispatch({ type: \"get_userdata\", payload: response });\r\n    } else {\r\n      const scopes = encodeURIComponent(\r\n        \"user-read-private user-library-read user-modify-playback-state user-read-playback-state user-read-currently-playing\"\r\n      );\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=${scopes}&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  };\r\n};\r\n\r\nconst spotifySearch = (dispatch) => {\r\n  return async (term, token) => {\r\n    if (term.length === 0) {\r\n      dispatch({\r\n        type: \"error_message\",\r\n        payload: \"Drop your favorite song, mate\",\r\n      });\r\n    } else {\r\n      const response = await axios.get(\r\n        `https://api.spotify.com/v1/search?type=track&q=${term}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200 && response.data.tracks.items.length === 0) {\r\n        dispatch({\r\n          type: \"error_message\",\r\n          payload: \"Not in the database, mate\",\r\n        });\r\n      }\r\n      response.status === 200\r\n        ? dispatch({ type: \"get_tracks\", payload: response.data.tracks.items })\r\n        : console.log(response.status);\r\n    }\r\n  };\r\n};\r\n\r\nconst playSpecificSong = (dispatch) => {\r\n  return async (token, trackURI) => {\r\n    await axios.put(\r\n      `https://api.spotify.com/v1/me/player/play`,\r\n      JSON.stringify({ uris: [trackURI] }),\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n  };\r\n};\r\n\r\nconst addTracksToPlaylist = async (userId, playlistId, trackURIs, token) => {\r\n  const response = await axios.post(\r\n    `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n    JSON.stringify({ uris: trackURIs }),\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst spotifySavePlaylist = (dispatch) => {\r\n  return async (playlistName, trackURIs, userId, token) => {\r\n    if (!trackURIs.length) {\r\n      dispatch({\r\n        type: \"error_message\",\r\n        payload: \"Add songs to the playlist, mate\",\r\n      });\r\n    } else if (!playlistName) {\r\n      dispatch({\r\n        type: \"error_message\",\r\n        payload: \"Missing name of the playlist, mate\",\r\n      });\r\n    }\r\n    const response = await axios.post(\r\n      `https://api.spotify.com/v1/users/${userId}/playlists`,\r\n      JSON.stringify({ name: playlistName }),\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    const playlistId = response.data.id;\r\n    const responseTracks = await addTracksToPlaylist(\r\n      userId,\r\n      playlistId,\r\n      trackURIs,\r\n      token\r\n    );\r\n    responseTracks.status === 201 &&\r\n      dispatch({ type: \"error_message\", payload: null });\r\n  };\r\n};\r\n\r\nexport const getCurrentPlayback = (dispatch) => {\r\n  return (token) => {\r\n    axios\r\n      .get(\"https://api.spotify.com/v1/me/player\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res) =>\r\n        res.data\r\n          ? dispatch({\r\n              type: \"get_playerdata\",\r\n              payload: res.data,\r\n            })\r\n          : dispatch({\r\n              type: \"error_message\",\r\n              payload: \"Turn on your spotify, mate\",\r\n            })\r\n      );\r\n  };\r\n};\r\n\r\nexport const getAlbums = (dispatch) => {\r\n  return async (token) => {\r\n    const response = await axios.get(`https://api.spotify.com/v1/me/albums`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: \"get_albums\",\r\n      payload: response.data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  fetchReducer,\r\n  {\r\n    fetchUserData,\r\n    getToken,\r\n    spotifySearch,\r\n    spotifySavePlaylist,\r\n    cleanErrorMessage,\r\n    getCurrentPlayback,\r\n    getAlbums,\r\n    playSpecificSong,\r\n  },\r\n  initialState\r\n);\r\n","import createDataContext from \"./createDataContext\";\r\nimport axios from \"axios\";\r\n\r\nimport { getCurrentPlayback } from \"./fetchDataContext\";\r\n\r\nexport const initialState = {};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action.payload);\r\n  switch (action.type) {\r\n    case \"get_currentPlayback\":\r\n      return { ...state, data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst playSong = (dispatch) => {\r\n  return async (token) => {\r\n    try {\r\n      axios.put(\r\n        \"https://api.spotify.com/v1/me/player/play\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nconst pauseSong = (dispatch) => {\r\n  return async (token) => {\r\n    try {\r\n      axios.put(\r\n        \"https://api.spotify.com/v1/me/player/pause\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nconst nextSong = (dispatch) => {\r\n  return async (token) => {\r\n    axios\r\n      .post(\r\n        \"https://api.spotify.com/v1/me/player/next\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => res.status === 204 && getCurrentPlayback(token));\r\n  };\r\n};\r\n\r\nconst previousSong = (dispatch) => {\r\n  return async (token) => {\r\n    try {\r\n      axios.post(\r\n        \"https://api.spotify.com/v1/me/player/previous\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  reducer,\r\n  {\r\n    playSong,\r\n    pauseSong,\r\n    nextSong,\r\n    previousSong,\r\n  },\r\n  initialState\r\n);\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nimport { Context as DataContext } from \"../../store/fetchDataContext\";\r\n\r\nconst SearchBar = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const { state, spotifySearch } = useContext(DataContext);\r\n\r\n  const search = () => {\r\n    spotifySearch(term, state.token);\r\n  };\r\n\r\n  const handleTermChange = (event) => {\r\n    setTerm(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      search();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <input\r\n        placeholder=\"Enter A Song, Album, or Artist\"\r\n        onChange={handleTermChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <div className=\"SearchButton\" onClick={() => search()}>\r\n        SEARCH\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import createDataContext from \"./createDataContext\";\r\n\r\nexport const initialState = {\r\n  tracks: [],\r\n};\r\n\r\nexport const globalReducer = (state, action) => {\r\n  console.log(\"triggered\", action);\r\n  switch (action.type) {\r\n    case \"add_track\":\r\n      return { ...state, tracks: [...state.tracks, action.track] };\r\n    case \"remove_track\":\r\n      return {\r\n        ...state,\r\n        tracks: state.tracks.filter((track) => track.id !== action.track.id),\r\n      };\r\n    case \"set_playlist\":\r\n      return { ...state, playlist: action.list };\r\n    case \"reset_animation\":\r\n      return { ...state, resetAnimation: action.value };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst addTrack = (dispatch) => {\r\n  return (track) => {\r\n    dispatch({ type: \"add_track\", track });\r\n  };\r\n};\r\n\r\nconst setPlaylist = (dispatch) => {\r\n  return (list) => {\r\n    dispatch({ type: \"set_playlist\", list });\r\n  };\r\n};\r\n\r\nconst resetAnimation = (dispatch) => {\r\n  return (value) => {\r\n    dispatch({ type: \"reset_animation\", value });\r\n  };\r\n};\r\n\r\nconst removeTrack = (dispatch) => {\r\n  return (track) => {\r\n    dispatch({ type: \"remove_track\", track });\r\n  };\r\n};\r\n\r\nexport const { Context, Provider } = createDataContext(\r\n  globalReducer,\r\n  {\r\n    addTrack,\r\n    setPlaylist,\r\n    removeTrack,\r\n    resetAnimation,\r\n  },\r\n  initialState\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport \"./Track.css\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  DeleteOutlined,\r\n  PlayCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Context } from \"../../store/globalContext\";\r\nimport { Context as DataContext } from \"../../store/fetchDataContext\";\r\n\r\nconst Track = (props) => {\r\n  const { addTrack, removeTrack, resetAnimation } = useContext(Context);\r\n  const { state, playSpecificSong, getCurrentPlayback } = useContext(\r\n    DataContext\r\n  );\r\n\r\n  const playTheSong = (uri) => {\r\n    playSpecificSong(state.token, uri);\r\n    resetAnimation(true);\r\n    setTimeout(function () {\r\n      getCurrentPlayback(state.token);\r\n    }, 400);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Track\" key={props.track.id}>\r\n      <div className=\"Track-cover-preview\">\r\n        <img\r\n          className=\"Track-album-cover\"\r\n          src={props.track.album.images[2].url}\r\n          alt=\"album cover\"\r\n        />\r\n      </div>\r\n      <div className=\"Track-information-container\">\r\n        {props.track.name.length < 30 ? (\r\n          <h3 className=\"Track-information\">{props.track.name}</h3>\r\n        ) : (\r\n          <p className=\"Track-information\">{props.track.name}</p>\r\n        )}\r\n\r\n        <p className=\"Track-artist\">\r\n          {props.track.artists[0].name} | {props.track.album.name}\r\n        </p>\r\n      </div>\r\n      {props.isRemoval ? (\r\n        <DeleteOutlined\r\n          onClick={() => removeTrack(props.track)}\r\n          className=\"Track-icon\"\r\n        />\r\n      ) : (\r\n        <div className=\"Track-icons-container\">\r\n          <PlayCircleOutlined\r\n            className=\"Track-icon\"\r\n            onClick={() => playTheSong(props.track.uri)}\r\n          />\r\n          <PlusCircleOutlined\r\n            onClick={() => addTrack(props.track)}\r\n            className=\"Track-icon\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"./TrackList.css\";\r\nimport Track from \"../Track/Track\";\r\n\r\nconst TrackList = (props) => {\r\n  return (\r\n    <div className=\"TrackList\">\r\n      {props.tracks !== undefined &&\r\n        props.tracks.map((track) => {\r\n          return (\r\n            <Track key={track.id} track={track} isRemoval={props.isRemoval} />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackList;\r\n","import React, { useContext } from \"react\";\r\nimport \"./SearchResults.css\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\n\r\nimport { Context } from \"../../store/fetchDataContext\";\r\n\r\nconst SearchResults = (props) => {\r\n  const { state } = useContext(Context);\r\n\r\n  return (\r\n    <div className=\"SearchResults\">\r\n      <h2>Search Results</h2>\r\n      {state.tracks && <TrackList tracks={state.tracks} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Playlist.css\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\n\r\nimport { Context as GlobalContext } from \"../../store/globalContext\";\r\nimport { Context as FetchDataContext } from \"../../store/fetchDataContext\";\r\n\r\nconst Playlist = (props) => {\r\n  const [nameChange, setNameChange] = useState(\"\");\r\n  const { state: globalState } = useContext(GlobalContext);\r\n  const { state: userState, spotifySavePlaylist } = useContext(\r\n    FetchDataContext\r\n  );\r\n\r\n  const handleNameChange = (event) => {\r\n    setNameChange(event.target.value);\r\n  };\r\n\r\n  const savePlaylist = () => {\r\n    const trackURIs = globalState.tracks.map((track) => track.uri);\r\n    spotifySavePlaylist(\r\n      nameChange,\r\n      trackURIs,\r\n      userState.userdata.id,\r\n      userState.token\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <div className=\"Playlist-header\">\r\n        <h2>Create Playlist</h2>\r\n        <input placeholder=\"New Name\" onChange={handleNameChange} />\r\n      </div>\r\n\r\n      <TrackList tracks={globalState.tracks} isRemoval={true} />\r\n      <div className=\"Playlist-save\" onClick={savePlaylist}>\r\n        SAVE TO SPOTIFY\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport Timer from \"react-compound-timer\";\r\nimport \"./styles.css\";\r\n\r\nimport { Progress } from \"antd\";\r\n\r\nimport {\r\n  CaretRightOutlined,\r\n  PauseOutlined,\r\n  RightOutlined,\r\n  LeftOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { Context as userDataContext } from \"../../store/fetchDataContext\";\r\nimport { Context as playerContext } from \"../../store/playerContext\";\r\nimport { Context as globalContext } from \"../../store/globalContext\";\r\n\r\nexport const Player = (props) => {\r\n  const controls = useAnimation();\r\n\r\n  const { state: dataState, getCurrentPlayback } = useContext(userDataContext);\r\n  const { state: globalState, resetAnimation } = useContext(globalContext);\r\n  const { playSong, pauseSong } = useContext(playerContext);\r\n  const [isPlaying, setIsPlaying] = useState(props.data.is_playing);\r\n\r\n  const full = props.data.item.duration_ms;\r\n  const rest = props.data.item.duration_ms - props.data.progress_ms;\r\n  const current = rest / (full / 100);\r\n  const restInSec = rest / 1000;\r\n  const width = -window.outerWidth / 2.75;\r\n\r\n  const updateStateofPlayer = () => {\r\n    getCurrentPlayback(dataState.token);\r\n  };\r\n\r\n  setTimeout(function () {\r\n    updateStateofPlayer();\r\n  }, 5000);\r\n\r\n  console.log(globalState);\r\n\r\n  if (globalState.resetAnimation) {\r\n    controls.set({\r\n      x: width,\r\n      transition: { duration: restInSec },\r\n    });\r\n    resetAnimation(false);\r\n  }\r\n\r\n  const togglePlayButton = (currentState, pause, start) => {\r\n    if (currentState) {\r\n      pause();\r\n      pauseSong(dataState.token);\r\n      controls.stop();\r\n    } else {\r\n      start();\r\n      playSong(dataState.token);\r\n      controls.start({\r\n        x: 0,\r\n        transition: { duration: restInSec },\r\n      });\r\n    }\r\n    setIsPlaying(!currentState);\r\n  };\r\n\r\n  const endOfSong = () => {\r\n    controls.set({\r\n      x: width,\r\n      transition: { duration: restInSec },\r\n    });\r\n    setTimeout(function () {\r\n      props.getCurrentPlayback(dataState.token);\r\n    }, 400);\r\n  };\r\n\r\n  const pressNext = () => {\r\n    props.forwardSong();\r\n    controls.set({\r\n      x: width,\r\n      transition: { duration: restInSec },\r\n    });\r\n    setTimeout(function () {\r\n      props.getCurrentPlayback(dataState.token);\r\n    }, 400);\r\n  };\r\n\r\n  const pressPrevious = () => {\r\n    props.backwardSong();\r\n    controls.set({\r\n      x: width,\r\n      transition: { duration: restInSec },\r\n    });\r\n    setTimeout(function () {\r\n      props.getCurrentPlayback(dataState.token);\r\n    }, 400);\r\n  };\r\n\r\n  if (isPlaying) {\r\n    controls.start({\r\n      x: 0,\r\n      transition: { duration: restInSec },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"PlayerContainer\">\r\n      <Timer\r\n        initialTime={rest}\r\n        direction=\"backward\"\r\n        checkpoints={[{ time: 0, callback: () => endOfSong() }]}\r\n      >\r\n        {({ start, pause, reset }) => (\r\n          <React.Fragment>\r\n            {props.data.item.name.length < 30 ? (\r\n              <h3>{props.data.item.name}</h3>\r\n            ) : (\r\n              <h5>{props.data.item.name}</h5>\r\n            )}\r\n            <img\r\n              alt=\"album\"\r\n              src={props.data.item.album.images[2].url}\r\n              className=\"playerContainerIMG\"\r\n            />\r\n            <RightOutlined className=\"iconNext\" onClick={() => pressNext()} />\r\n            <div className=\"iconPosition\"> </div>\r\n            <motion.div style={{ opacity: isPlaying ? 1 : 0, x: 0 }}>\r\n              <PauseOutlined className=\"playIcon\" />\r\n            </motion.div>\r\n            <motion.div animate style={{ opacity: isPlaying ? 0 : 1, x: 0 }}>\r\n              <CaretRightOutlined\r\n                className=\"playIcon\"\r\n                onClick={() => togglePlayButton(isPlaying, pause, start)}\r\n              />\r\n            </motion.div>\r\n            <LeftOutlined\r\n              className=\"iconPrevious\"\r\n              onClick={() => pressPrevious()}\r\n            />\r\n            <div className=\"playerProgressContainer\">\r\n              <motion.div\r\n                animate={controls}\r\n                initial={{ x: `-${current}%` }}\r\n                className=\"playerProgress\"\r\n              >\r\n                <Progress\r\n                  percent={100}\r\n                  strokeColor={{\r\n                    \"0%\": \"#108ee9\",\r\n                    \"100%\": \"#87d068\",\r\n                  }}\r\n                  showInfo={false}\r\n                />\r\n              </motion.div>\r\n            </div>\r\n            <div className=\"playerTimer\"></div>\r\n          </React.Fragment>\r\n        )}\r\n      </Timer>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\nimport { Player } from \"../Player/Player\";\r\n\r\nimport { Context as playerContext } from \"../../store/playerContext\";\r\nimport { Context as userDataContext } from \"../../store/fetchDataContext\";\r\n\r\nexport const PlayerDataContainer = (props) => {\r\n  const [newSong, setNewSong] = useState(false);\r\n  const { nextSong, previousSong } = useContext(playerContext);\r\n  const { state: dataState, getCurrentPlayback } = useContext(userDataContext);\r\n\r\n  const forwardSong = () => {\r\n    setNewSong(!newSong);\r\n    nextSong(dataState.token);\r\n    getCurrentPlayback(dataState.token);\r\n  };\r\n\r\n  const backwardSong = () => {\r\n    setNewSong(!newSong);\r\n    previousSong(dataState.token);\r\n    getCurrentPlayback(dataState.token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentPlayback(dataState.token);\r\n  }, []); //eslint-disable-line\r\n  return (\r\n    <div>\r\n      {dataState.playerdata && (\r\n        <Player\r\n          data={dataState.playerdata}\r\n          forwardSong={forwardSong}\r\n          backwardSong={backwardSong}\r\n          getCurrentPlayback={getCurrentPlayback}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Album.css\";\r\n\r\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\r\nimport { Context as DataContext } from \"../../store/fetchDataContext\";\r\nimport { Context as globalContext } from \"../../store/globalContext\";\r\n\r\nexport const Album = (props) => {\r\n  const [showAlbumDetails, setShowAlbumDetails] = useState(false);\r\n  const { resetAnimation } = useContext(globalContext);\r\n  const { state, playSpecificSong, getCurrentPlayback } = useContext(\r\n    DataContext\r\n  );\r\n\r\n  const playTheSong = (uri) => {\r\n    playSpecificSong(state.token, uri);\r\n    resetAnimation(true);\r\n    setTimeout(function () {\r\n      getCurrentPlayback(state.token);\r\n    }, 400);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showAlbumDetails ? (\r\n        <div key={props.data.album.id} className=\"Track-Open\">\r\n          <div\r\n            onClick={() => setShowAlbumDetails(!showAlbumDetails)}\r\n            className=\"Track-Open-Header\"\r\n          >\r\n            <img\r\n              src={props.data.album.images[2].url}\r\n              alt=\"album cover\"\r\n              className=\"Track-img-open\"\r\n            />\r\n            <h4>{props.data.album.name}</h4>\r\n          </div>\r\n          <div>\r\n            {props.data.album.tracks.items.map((track) => (\r\n              <div className=\"Track-Open-Detail\" key={track.id}>\r\n                <div className=\"Track-Open-Detail-Icon\">\r\n                  <PlayCircleOutlined\r\n                    className=\"Track-icon\"\r\n                    onClick={() => playTheSong(track.uri)}\r\n                  />\r\n                </div>\r\n                {track.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => setShowAlbumDetails(!showAlbumDetails)}\r\n          key={props.data.album.id}\r\n        >\r\n          <div className=\"Track\" style={{ cursor: \"pointer\" }}>\r\n            <div className=\"Track-cover-preview\">\r\n              <img\r\n                className=\"Track-album-cover\"\r\n                src={props.data.album.images[2].url}\r\n                alt=\"album cover\"\r\n              />\r\n            </div>\r\n            <div className=\"Track-information-container\">\r\n              {props.data.album.name.length < 30 ? (\r\n                <h3 className=\"Track-information\">{props.data.album.name}</h3>\r\n              ) : (\r\n                <p className=\"Track-information\">{props.data.album.name}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Context as fetchDataContext } from \"../../store/fetchDataContext\";\r\n\r\nimport { Album } from \"../Album/Album\";\r\n\r\nexport const UserPlayLists = () => {\r\n  const { state, getAlbums } = useContext(fetchDataContext);\r\n\r\n  useEffect(() => {\r\n    getAlbums(state.token);\r\n  }, []); //eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"SearchResults\">\r\n      <h2>Albums</h2>\r\n      {state.albums &&\r\n        state.albums.items.map((album) => (\r\n          <Album data={album} key={album.album.id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompactDisc, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Context as fetchDataContext } from \"../../store/fetchDataContext\";\r\nimport { Context as playerContext } from \"../../store/playerContext\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport SearchBar from \"../../Components/SearchBar/SearchBar\";\r\nimport SearchResults from \"../../Components/SearchResults/SearchResults\";\r\n\r\nimport Playlist from \"../../Components/Playlist/Playlist\";\r\nimport { PlayerDataContainer } from \"../../Components/PlayerDataContainer/PlayerDataContainer\";\r\nimport { UserPlayLists } from \"../../Components/UserPlaylists/UserPlaylists\";\r\n\r\nconst HomeScreen = () => {\r\n  const { state, getToken, cleanErrorMessage } = useContext(fetchDataContext);\r\n  const { getCurrentPlayback } = useContext(playerContext);\r\n  const [showUserPlaylist, setShowUserPlaylist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getToken();\r\n    getPlayerData();\r\n  }, []); //eslint-disable-line\r\n\r\n  const getPlayerData = () => {\r\n    state.token && getCurrentPlayback(state.token);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state.token && (\r\n        <>\r\n          <div className=\"TopContainer\">\r\n            <h1>\r\n              Ja<span className=\"highlight\">mm</span>ing\r\n            </h1>\r\n            {state.userdata && (\r\n              <div className=\"userBoardInfo\">\r\n                <div onClick={() => setShowUserPlaylist(!showUserPlaylist)}>\r\n                  {showUserPlaylist ? (\r\n                    <FontAwesomeIcon\r\n                      icon={faHome}\r\n                      className=\"ShowPlayerListIcon\"\r\n                    />\r\n                  ) : (\r\n                    <FontAwesomeIcon\r\n                      icon={faCompactDisc}\r\n                      className=\"ShowPlayerListIcon\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <h3>{state.userdata.display_name}</h3>\r\n                <h5>\r\n                  {state.userdata.product} |{\" \"}\r\n                  {state.userdata.followers.total !== 1\r\n                    ? state.userdata.followers.total + \" followers\"\r\n                    : state.userdata.followers.total + \" follower\"}\r\n                </h5>\r\n                <a href={state.userdata.external_urls.spotify}>\r\n                  <img\r\n                    className=\"userBoardIMG\"\r\n                    src={state.userdata.images[0].url}\r\n                    alt=\"profile_img\"\r\n                  />\r\n                </a>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"App\">\r\n            <div className=\"Header\">\r\n              <SearchBar />\r\n              <PlayerDataContainer />\r\n            </div>\r\n            <AnimatePresence>\r\n              {state.error && (\r\n                <motion.div\r\n                  className=\"errorMessage\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 0.5 }}\r\n                  transition={{ duration: 1 }}\r\n                  exit={{ opacity: 0 }}\r\n                >\r\n                  <p style={{ opacity: 0 }}>\r\n                    {setTimeout(cleanErrorMessage, 3000)}\r\n                  </p>\r\n                  <p>{state.error}</p>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n            <div className=\"App-playlist\">\r\n              <SearchResults />\r\n              {showUserPlaylist ? <UserPlayLists /> : <Playlist />}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from \"react\";\r\n\r\nimport HomeScreen from \"./Screens/HomeScreen\";\r\n\r\nimport { Provider as GlobalProvider } from \"./store/globalContext\";\r\nimport { Provider as FetchProvider } from \"./store/fetchDataContext\";\r\nimport { Provider as PlayerProvider } from \"./store/playerContext\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <PlayerProvider>\r\n        <FetchProvider>\r\n          <GlobalProvider>\r\n            <HomeScreen />\r\n          </GlobalProvider>\r\n        </FetchProvider>\r\n      </PlayerProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}